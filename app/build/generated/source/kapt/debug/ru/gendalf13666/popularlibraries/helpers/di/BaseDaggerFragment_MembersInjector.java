// Generated by Dagger (https://dagger.dev).
package ru.gendalf13666.popularlibraries.helpers.di;

import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseDaggerFragment_MembersInjector implements MembersInjector<BaseDaggerFragment> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  public BaseDaggerFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
  }

  public static MembersInjector<BaseDaggerFragment> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider) {
    return new BaseDaggerFragment_MembersInjector(androidInjectorProvider);
  }

  @Override
  public void injectMembers(BaseDaggerFragment instance) {
    injectAndroidInjector(instance, androidInjectorProvider.get());
  }

  @InjectedFieldSignature("ru.gendalf13666.popularlibraries.helpers.di.BaseDaggerFragment.androidInjector")
  public static void injectAndroidInjector(BaseDaggerFragment instance,
      DispatchingAndroidInjector<Object> androidInjector) {
    instance.androidInjector = androidInjector;
  }
}
