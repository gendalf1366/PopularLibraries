// Generated by Dagger (https://dagger.dev).
package ru.gendalf13666.popularlibraries.helpers.di.modules;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import ru.gendalf13666.popularlibraries.api.GithubApi;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApiModule_ProvideGithubApiFactory implements Factory<GithubApi> {
  private final ApiModule module;

  private final Provider<String> baseUrlProvider;

  public ApiModule_ProvideGithubApiFactory(ApiModule module, Provider<String> baseUrlProvider) {
    this.module = module;
    this.baseUrlProvider = baseUrlProvider;
  }

  @Override
  public GithubApi get() {
    return provideGithubApi(module, baseUrlProvider.get());
  }

  public static ApiModule_ProvideGithubApiFactory create(ApiModule module,
      Provider<String> baseUrlProvider) {
    return new ApiModule_ProvideGithubApiFactory(module, baseUrlProvider);
  }

  public static GithubApi provideGithubApi(ApiModule instance, String baseUrl) {
    return Preconditions.checkNotNullFromProvides(instance.provideGithubApi(baseUrl));
  }
}
