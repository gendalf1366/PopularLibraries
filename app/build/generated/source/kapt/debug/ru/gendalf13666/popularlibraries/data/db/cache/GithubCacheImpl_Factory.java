// Generated by Dagger (https://dagger.dev).
package ru.gendalf13666.popularlibraries.data.db.cache;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import ru.gendalf13666.popularlibraries.data.db.AppDB;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GithubCacheImpl_Factory implements Factory<GithubCacheImpl> {
  private final Provider<AppDB> appDBProvider;

  public GithubCacheImpl_Factory(Provider<AppDB> appDBProvider) {
    this.appDBProvider = appDBProvider;
  }

  @Override
  public GithubCacheImpl get() {
    return newInstance(appDBProvider.get());
  }

  public static GithubCacheImpl_Factory create(Provider<AppDB> appDBProvider) {
    return new GithubCacheImpl_Factory(appDBProvider);
  }

  public static GithubCacheImpl newInstance(AppDB appDB) {
    return new GithubCacheImpl(appDB);
  }
}
