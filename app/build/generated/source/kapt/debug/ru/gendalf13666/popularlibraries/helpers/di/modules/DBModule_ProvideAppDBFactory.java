// Generated by Dagger (https://dagger.dev).
package ru.gendalf13666.popularlibraries.helpers.di.modules;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import ru.gendalf13666.popularlibraries.data.db.AppDB;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DBModule_ProvideAppDBFactory implements Factory<AppDB> {
  private final DBModule module;

  private final Provider<Context> contextProvider;

  public DBModule_ProvideAppDBFactory(DBModule module, Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public AppDB get() {
    return provideAppDB(module, contextProvider.get());
  }

  public static DBModule_ProvideAppDBFactory create(DBModule module,
      Provider<Context> contextProvider) {
    return new DBModule_ProvideAppDBFactory(module, contextProvider);
  }

  public static AppDB provideAppDB(DBModule instance, Context context) {
    return Preconditions.checkNotNullFromProvides(instance.provideAppDB(context));
  }
}
